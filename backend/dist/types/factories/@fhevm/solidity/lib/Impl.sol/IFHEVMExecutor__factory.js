"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IFHEVMExecutor__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "ct",
                type: "bytes32",
            },
            {
                internalType: "enum FheType",
                name: "toType",
                type: "uint8",
            },
        ],
        name: "cast",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheAdd",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheBitAnd",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheBitOr",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheBitXor",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheDiv",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheEq",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheGe",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheGt",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "control",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "ifTrue",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "ifFalse",
                type: "bytes32",
            },
        ],
        name: "fheIfThenElse",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheLe",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheLt",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheMax",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheMin",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheMul",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheNe",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "ct",
                type: "bytes32",
            },
        ],
        name: "fheNeg",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "ct",
                type: "bytes32",
            },
        ],
        name: "fheNot",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "enum FheType",
                name: "randType",
                type: "uint8",
            },
        ],
        name: "fheRand",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "upperBound",
                type: "uint256",
            },
            {
                internalType: "enum FheType",
                name: "randType",
                type: "uint8",
            },
        ],
        name: "fheRandBounded",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheRem",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheRotl",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheRotr",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheShl",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheShr",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "lhs",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "rhs",
                type: "bytes32",
            },
            {
                internalType: "bytes1",
                name: "scalarByte",
                type: "bytes1",
            },
        ],
        name: "fheSub",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getInputVerifierAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "ct",
                type: "uint256",
            },
            {
                internalType: "enum FheType",
                name: "toType",
                type: "uint8",
            },
        ],
        name: "trivialEncrypt",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "inputHandle",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "callerAddress",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "inputProof",
                type: "bytes",
            },
            {
                internalType: "enum FheType",
                name: "inputType",
                type: "uint8",
            },
        ],
        name: "verifyCiphertext",
        outputs: [
            {
                internalType: "bytes32",
                name: "result",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IFHEVMExecutor__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IFHEVMExecutor__factory = IFHEVMExecutor__factory;
IFHEVMExecutor__factory.abi = _abi;
