/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrivateSwap,
  PrivateSwapInterface,
} from "../../contracts/PrivateSwap";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PricesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Quoted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getLastQuoteHandle",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrices",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "priceAtoB_1e4",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "priceBtoA_1e4",
        type: "uint32",
      },
    ],
    name: "initPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "amountIn_encrypted",
        type: "bytes32",
      },
      {
        internalType: "externalEuint32",
        name: "maxSlippagePpm_encrypted",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "quoteAtoB",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "amountIn_encrypted",
        type: "bytes32",
      },
      {
        internalType: "externalEuint32",
        name: "maxSlippagePpm_encrypted",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "quoteBtoA",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "priceAtoB_encrypted",
        type: "bytes32",
      },
      {
        internalType: "externalEuint32",
        name: "priceBtoA_encrypted",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "setPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b506101646100ae604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80515f516020610e355f395f51905f5280546001600160a01b03199081166001600160a01b039384161790915560208301515f516020610e155f395f51905f528054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b5f610170612710610198565b5f81905560018190559050610184816101b0565b50600154610191906101b0565b5050610313565b5f6101aa63ffffffff831660046101bf565b92915050565b5f6101bb8230610256565b5090565b5f516020610e155f395f51905f5254604051639cd07acb60e01b81525f915f516020610e355f395f51905f52916001600160a01b0390911690639cd07acb9061020e90879087906004016102cc565b6020604051808303815f875af115801561022a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024e91906102fc565b949350505050565b5f5f516020610e355f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156102b1575f5ffd5b505af11580156102c3573d5f5f3e3d5ffd5b50505050505050565b82815260408101605483106102ef57634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f6020828403121561030c575f5ffd5b5051919050565b610af5806103205f395ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c8063b9d0020f11610058578063b9d0020f146100e1578063bd9a548b146100f4578063c5e5e1621461010e578063da1f12ab14610121575f5ffd5b806330b2095f1461007e578063842ff4a8146100b9578063a25713d8146100ce575b5f5ffd5b6100a661008c366004610958565b6001600160a01b03165f9081526002602052604090205490565b6040519081526020015b60405180910390f35b6100cc6100c736600461097e565b610129565b005b6100a66100dc36600461097e565b6101fc565b6100cc6100ef366004610a12565b61031e565b5f54600154604080519283526020830191909152016100b0565b6100a661011c36600461097e565b610351565b6127116100a6565b5f6101698584848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061040292505050565b90505f6101ab8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061040292505050565b5f839055600181905590506101bf82610416565b506101cb600154610416565b506040517f50cf648ca06d54ba1c9146903ca81ec64d809adc4e1430d85dda94720ea8528e905f90a1505050505050565b5f5f61023d8685858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061040292505050565b90505f61027f8686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061040292505050565b90505f610296610290612710610425565b8361043d565b90505f6102c06102b66102a88661046b565b6102b18561046b565b610477565b6102b15f5461046b565b335f90815260026020526040902081905590506102dc81610416565b506102e781336104a5565b5060405133907f7e4f13d09d3e16eb6317ca878b5cfdf2d25af68f1dd40bb517fc40c237dc155e905f90a298975050505050505050565b61032782610425565b5f5561033281610425565b6001555f5461034090610416565b5061034c600154610416565b505050565b5f5f6103928685858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061040292505050565b90505f6103d48686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061040292505050565b90505f6103e5610290612710610425565b90505f6102c06103f76102a88661046b565b6102b160015461046b565b5f61040f838360046104b7565b9392505050565b5f61042182306105d7565b5090565b5f6104378263ffffffff166004610660565b92915050565b5f8261044f5761044c5f610425565b92505b816104605761045d5f610425565b91505b61040f83835f61071d565b5f610437826005610818565b5f82610489576104865f61088d565b92505b8161049a576104975f61088d565b91505b61040f83835f6108a3565b5f6104b083836105d7565b5090919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90610530908890339089908990600401610a63565b6020604051808303815f875af115801561054c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105709190610abd565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156105b9575f5ffd5b505af11580156105cb573d5f5f3e3d5ffd5b50505050509392505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610645575f5ffd5b505af1158015610657573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906106d59087908790600401610ad4565b6020604051808303815f875af11580156106f1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107159190610abd565b949350505050565b5f5f82156107305750600160f81b610733565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516303056db360e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063182b6d98906064015b6020604051808303815f875af11580156107ea573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080e9190610abd565b9695505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516307227b9160e21b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690631c89ee44906106d59087908790600401610ad4565b5f6104378267ffffffffffffffff166005610660565b5f5f82156108b65750600160f81b6108b9565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051630afe14ad60e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0316906357f0a568906064016107ce565b5f60208284031215610968575f5ffd5b81356001600160a01b038116811461040f575f5ffd5b5f5f5f5f60608587031215610991575f5ffd5b8435935060208501359250604085013567ffffffffffffffff8111156109b5575f5ffd5b8501601f810187136109c5575f5ffd5b803567ffffffffffffffff8111156109db575f5ffd5b8760208284010111156109ec575f5ffd5b949793965060200194505050565b803563ffffffff81168114610a0d575f5ffd5b919050565b5f5f60408385031215610a23575f5ffd5b610a2c836109fa565b9150610a3a602084016109fa565b90509250929050565b60548110610a5f57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f830116840101915050610ab46060830184610a43565b95945050505050565b5f60208284031215610acd575f5ffd5b5051919050565b8281526040810161040f6020830184610a4356fea164736f6c634300081b000a9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497019e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700";

type PrivateSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateSwap__factory extends ContractFactory {
  constructor(...args: PrivateSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateSwap__factory {
    return super.connect(runner) as PrivateSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateSwapInterface {
    return new Interface(_abi) as PrivateSwapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrivateSwap {
    return new Contract(address, _abi, runner) as unknown as PrivateSwap;
  }
}
